% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphicalFunctions.R
\name{imageGreenhouse}
\alias{imageGreenhouse}
\title{a function for representing a trait in the phenoarch greenhouse}
\usage{
imageGreenhouse(datain, trait, xcol, ycol, numrow, numcol, typeD,
  typeT = 1, ylim = NULL, typeI = "ggplot2", typeV = NULL)
}
\arguments{
\item{datain}{a dataframe to explore}

\item{trait}{character, a parameter to draw}

\item{xcol}{character, name of the abscissa column (Line or x...)}

\item{ycol}{character, name of the ordinate column (Position or y...)}

\item{numrow}{numeric, number of rows in the greenhouse}

\item{numcol}{numeric, number of columns in the greenhouse}

\item{typeD}{numeric, type of dataframe (1==wide, 2==long). If typeD==2, the input dataset must contain
a 'Trait' column.}

\item{typeT}{numeric, type of the trait (1: quantitatif, 2: qualitatif), 1 is the default}

\item{ylim}{if trait is quantitative, numeric vectors of length 2, giving the trait coordinates ranges.
default = NULL}

\item{typeI}{character, type of image.
"video" for createDynam.R program that produces a video of an experiment,
"plotly" for interactive graphic for spatial visualisation,
"ggplot2" for classical graphic in report pdf , default.}

\item{typeV}{character, type de video, NULL by default, "absolute" for abs. video}
}
\value{
a ggplot2 object if plotly, the print of the ggplot2 object (a graph) otherwise
}
\description{
a function for representing a trait in the phenoarch greenhouse
}
\details{
the data.frame in input must have the positions of each pot (Line and
Position columns).

For plotly type graphic, the data frame in input must also contain id of plants
(Manip, Pot, Genotype, Repsce)
}
\examples{
\donttest{
# a video call
 imageGreenhouse(datain=filter(plant2,Day==vecDay[Day]),trait="plantHeight",
                 xcol="Line",ycol="Position",numrow=28,numcol=60,
                 typeD=1,typeT=1,ylim=NULL,typeI="video")
# an interactive plotly call
 test<-imageGreenhouse(datain=plant4, trait="Biomass24",xcol="Line",ycol="Position",
                 numrow=28,numcol=60,typeD=1,typeT=1, ylim=NULL,typeI="plotly")
# test is a ggplot2 object, you have to render it with: plotly::ggplotly(test)
# a classical ggplot2 call
 imageGreenhouse(datain=plant4, trait="Biomass24",xcol="Line",ycol="Position",
                numrow=28,numcol=60,typeD=1,typeT=1, ylim=NULL,typeI="ggplot2")
}
}
